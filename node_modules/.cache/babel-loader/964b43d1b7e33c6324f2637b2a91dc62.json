{"ast":null,"code":"import axios from \"axios\";\nimport qs from \"qs\";\n\nconst requestBuilder = method => ({\n  url,\n  opts = {\n    headers: {}\n  },\n  body\n}) => {\n  const config = {\n    method,\n    url,\n    data: body,\n    // withCredentials: true,\n    paramsSerializer: params => qs.stringify(params, {\n      arrayFormat: \"repeat\"\n    }),\n    ...opts,\n    headers: { ...opts.headers // \"Cache-Control\": \"max-age=31536000\",\n\n    }\n  };\n  return axios(config).then(res => {\n    return res;\n  }).catch(err => {\n    if (err.response) {\n      const errorResponse = err.response.data;\n\n      if (errorResponse.exception) {\n        throw new Error(`\n          ${err.message},\n          ${err.response.status},\n          ${errorResponse.exception}\n          `);\n      } else {\n        throw err;\n      }\n    } else {\n      // eslint-disable no-console\n      console.error(err);\n    }\n  });\n};\n\nexport const get = requestBuilder(\"GET\");\nexport const put = requestBuilder(\"PUT\");\nexport const post = requestBuilder(\"POST\");\nexport const patch = requestBuilder(\"PATCH\");\nexport const del = requestBuilder(\"DELETE\");","map":{"version":3,"sources":["/Users/pricet/Desktop/GoCardless Coding Test/client/src/utils/api.ts"],"names":["axios","qs","requestBuilder","method","url","opts","headers","body","config","data","paramsSerializer","params","stringify","arrayFormat","then","res","catch","err","response","errorResponse","exception","Error","message","status","console","error","get","put","post","patch","del"],"mappings":"AAAA,OAAOA,KAAP,MAAyD,OAAzD;AACA,OAAOC,EAAP,MAAe,IAAf;;AAUA,MAAMC,cAAc,GAAIC,MAAD,IAAyB,CAAC;AAC/CC,EAAAA,GAD+C;AAE/CC,EAAAA,IAAI,GAAG;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAFwC;AAG/CC,EAAAA;AAH+C,CAAD,KAIzB;AACrB,QAAMC,MAA0B,GAAG;AACjCL,IAAAA,MADiC;AAEjCC,IAAAA,GAFiC;AAGjCK,IAAAA,IAAI,EAAEF,IAH2B;AAIjC;AACAG,IAAAA,gBAAgB,EAAGC,MAAD,IAChBV,EAAE,CAACW,SAAH,CAAaD,MAAb,EAAqB;AAAEE,MAAAA,WAAW,EAAE;AAAf,KAArB,CAN+B;AAOjC,OAAGR,IAP8B;AAQjCC,IAAAA,OAAO,EAAE,EACP,GAAGD,IAAI,CAACC,OADD,CAEP;;AAFO;AARwB,GAAnC;AAcA,SAAON,KAAK,CAACQ,MAAD,CAAL,CACJM,IADI,CACEC,GAAD,IAAc;AAClB,WAAOA,GAAP;AACD,GAHI,EAIJC,KAJI,CAIGC,GAAD,IAAS;AACd,QAAIA,GAAG,CAACC,QAAR,EAAkB;AAChB,YAAMC,aAAa,GAAGF,GAAG,CAACC,QAAJ,CAAaT,IAAnC;;AAEA,UAAIU,aAAa,CAACC,SAAlB,EAA6B;AAC3B,cAAM,IAAIC,KAAJ,CAAW;YACfJ,GAAG,CAACK,OAAQ;YACZL,GAAG,CAACC,QAAJ,CAAaK,MAAO;YACpBJ,aAAa,CAACC,SAAU;WAHpB,CAAN;AAKD,OAND,MAMO;AACL,cAAMH,GAAN;AACD;AACF,KAZD,MAYO;AACL;AACAO,MAAAA,OAAO,CAACC,KAAR,CAAcR,GAAd;AACD;AACF,GArBI,CAAP;AAsBD,CAzCD;;AA2CA,OAAO,MAAMS,GAAgB,GAAGxB,cAAc,CAAC,KAAD,CAAvC;AACP,OAAO,MAAMyB,GAAgB,GAAGzB,cAAc,CAAC,KAAD,CAAvC;AACP,OAAO,MAAM0B,IAAiB,GAAG1B,cAAc,CAAC,MAAD,CAAxC;AACP,OAAO,MAAM2B,KAAkB,GAAG3B,cAAc,CAAC,OAAD,CAAzC;AACP,OAAO,MAAM4B,GAAgB,GAAG5B,cAAc,CAAC,QAAD,CAAvC","sourcesContent":["import axios, { AxiosResponse, AxiosRequestConfig } from \"axios\";\nimport qs from \"qs\";\n\ntype HttpMethods = \"GET\" | \"PUT\" | \"POST\" | \"PATCH\" | \"DELETE\";\nexport type HttpRequestArgs = {\n  url: string;\n  body?: object | null;\n  opts?: AxiosRequestConfig;\n};\ntype HttpRequest = (args: HttpRequestArgs) => Promise<AxiosResponse<any>>;\n\nconst requestBuilder = (method: HttpMethods) => ({\n  url,\n  opts = { headers: {} },\n  body,\n}: HttpRequestArgs) => {\n  const config: AxiosRequestConfig = {\n    method,\n    url,\n    data: body,\n    // withCredentials: true,\n    paramsSerializer: (params) =>\n      qs.stringify(params, { arrayFormat: \"repeat\" }),\n    ...opts,\n    headers: {\n      ...opts.headers,\n      // \"Cache-Control\": \"max-age=31536000\",\n    },\n  };\n\n  return axios(config)\n    .then((res: any) => {\n      return res;\n    })\n    .catch((err) => {\n      if (err.response) {\n        const errorResponse = err.response.data;\n\n        if (errorResponse.exception) {\n          throw new Error(`\n          ${err.message},\n          ${err.response.status},\n          ${errorResponse.exception}\n          `);\n        } else {\n          throw err;\n        }\n      } else {\n        // eslint-disable no-console\n        console.error(err);\n      }\n    });\n};\n\nexport const get: HttpRequest = requestBuilder(\"GET\");\nexport const put: HttpRequest = requestBuilder(\"PUT\");\nexport const post: HttpRequest = requestBuilder(\"POST\");\nexport const patch: HttpRequest = requestBuilder(\"PATCH\");\nexport const del: HttpRequest = requestBuilder(\"DELETE\");\n"]},"metadata":{},"sourceType":"module"}